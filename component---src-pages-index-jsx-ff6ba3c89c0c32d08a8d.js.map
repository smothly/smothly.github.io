{"version":3,"sources":["webpack:///./src/components/section-about/index.jsx","webpack:///./src/components/section-blog/index.jsx","webpack:///./src/components/section-experience/index.jsx","webpack:///./src/components/section-projects/index.jsx","webpack:///./src/components/section-skills/index.jsx","webpack:///./src/pages/index.jsx","webpack:///./src/components/section/index.jsx","webpack:///./src/components/summary-item/index.jsx"],"names":["SectionAbout","_ref","about","formattedAbout","replace","React","createElement","Section","title","className","style","whiteSpace","dangerouslySetInnerHTML","__html","SectionBlog","posts","map","post","SummaryItem","key","node","fields","slug","name","frontmatter","description","link","internal","length","Link","to","SectionExperience","experience","item","SectionProjects","projects","project","SectionSkills","skills","skill","Index","data","get","allMarkdownRemark","edges","noBlog","Layout","SEO","Header","metadata","site","siteMetadata","classes","children","linkContent","href"],"mappings":"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","file":"component---src-pages-index-jsx-ff6ba3c89c0c32d08a8d.js","sourcesContent":["import React from 'react';\n\nimport Section from '../section';\n\nconst SectionAbout = ({ about }) => {\n  const formattedAbout = about.replace('example', '<strong>example</strong>'); // Replace 'example' with the desired text to be bolded\n\n  return (\n    <Section title=\"About Me\">\n      <div className=\"mb-6\" style={{ whiteSpace: 'pre-line' }}>\n        <p dangerouslySetInnerHTML={{ __html: formattedAbout }}></p>\n      </div>\n    </Section>\n  );\n};\n\nexport default SectionAbout;\n","import { Link } from 'gatsby';\nimport React from 'react';\n\nimport Section from '../section';\nimport SummaryItem from '../summary-item';\n\nconst SectionBlog = ({ posts }) => {\n  return (\n    <Section title=\"Work & Project\">\n      {posts.map((post) => (\n        <SummaryItem\n          key={post.node.fields.slug}\n          name={post.node.frontmatter.title}\n          description={post.node.frontmatter.description}\n          link={post.node.fields.slug}\n          internal\n        />\n      ))}\n      {posts.length >= 5 && (\n        <Link className=\"text-gray-500 text-sm hover:text-black\" to=\"/blog\">\n          View all posts &rarr;\n        </Link>\n      )}\n    </Section>\n  );\n};\n\nexport default SectionBlog;\n","import React from 'react';\n\nimport Section from '../section';\nimport SummaryItem from '../summary-item';\n\nconst SectionExperience = ({ experience }) => {\n  if (!experience.length) return null;\n\n  return (\n    <Section title=\"Experience\">\n      {experience.map((item) => (\n        <SummaryItem\n          key={item.name}\n          name={item.name}\n          description={item.description}\n          link={item.link}\n        />\n      ))}\n    </Section>\n  );\n};\n\nexport default SectionExperience;\n","import React from 'react';\n\nimport Section from '../section';\nimport SummaryItem from '../summary-item';\n\nconst SectionProjects = ({ projects }) => {\n  if (!projects.length) return null;\n\n  return (\n    <Section title=\"Projects\">\n      {projects.map((project) => (\n        <SummaryItem\n          key={project.name}\n          name={project.name}\n          description={project.description}\n          link={project.link}\n        />\n      ))}\n    </Section>\n  );\n};\n\nexport default SectionProjects;\n","import React from 'react';\n\nimport Section from '../section';\nimport SummaryItem from '../summary-item';\n\nconst SectionSkills = ({ skills }) => {\n  return (\n    <Section title=\"Skills\">\n      {skills.map((skill) => (\n        <SummaryItem\n          key={skill.name}\n          name={skill.name}\n          description={skill.description}\n        />\n      ))}\n    </Section>\n  );\n};\n\nexport default SectionSkills;\n","import { graphql } from 'gatsby';\nimport get from 'lodash/get';\nimport React from 'react';\n\nimport Header from '../components/header';\nimport Layout from '../components/layout';\nimport SectionAbout from '../components/section-about';\nimport SectionBlog from '../components/section-blog';\nimport SectionExperience from '../components/section-experience';\nimport SectionProjects from '../components/section-projects';\nimport SectionSkills from '../components/section-skills';\nimport SEO from '../components/seo';\n\nconst Index = ({ data }) => {\n  const about = get(data, 'site.siteMetadata.about', false);\n  const projects = get(data, 'site.siteMetadata.projects', false);\n  const posts = data.allMarkdownRemark.edges;\n  const experience = get(data, 'site.siteMetadata.experience', false);\n  const skills = get(data, 'site.siteMetadata.skills', false);\n  const noBlog = !posts || !posts.length;\n\n  return (\n    <Layout>\n      <SEO />\n      <Header metadata={data.site.siteMetadata} noBlog={noBlog} />\n      {about && <SectionAbout about={about} />}\n      {projects && projects.length && <SectionProjects projects={projects} />}\n      {!noBlog && <SectionBlog posts={posts} />}\n      {experience && experience.length && (\n        <SectionExperience experience={experience} />\n      )}\n      {skills && skills.length && <SectionSkills skills={skills} />}\n    </Layout>\n  );\n};\n\nexport default Index;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        name\n        title\n        description\n        about\n        author\n        github\n        linkedin\n        projects {\n          name\n          description\n          link\n        }\n        experience {\n          name\n          description\n          link\n        }\n        skills {\n          name\n          description\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 5\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\n\nconst classes = {\n  wrapper: 'block pt-12 md:flex',\n  title: 'pb-6 md:w-full md:max-w-150 md:p-0',\n  heading:\n    'font-xs font-light tracking-widest text-sm text-gray-600 leading-normal uppercase',\n  content: 'flex-none text-lg text-gray-600 font-light md:flex-1 md:pl-20',\n};\n\nconst Section = ({ title, children }) => {\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.title}>\n        <h2 className={classes.heading}>{title}</h2>\n      </div>\n      <div className={classes.content}>{children}</div>\n    </div>\n  );\n};\n\nexport default Section;\n","import { Link } from 'gatsby';\nimport React from 'react';\n\nconst classes = {\n  wrapper: 'mb-6',\n  name: 'font-semibold text-gray-900 pb-1',\n  description: 'text-md text-gray-600 font-light',\n};\n\nconst SummaryItem = ({ name, description, link = false, internal = false }) => {\n  let linkContent;\n  if (internal) {\n    linkContent = <Link to={link}>{name}</Link>;\n  } else {\n    linkContent = <a href={link}>{name}</a>;\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <h3\n        className={`${classes.name} ${\n          link ? 'hover:underline hover:text-black' : ''\n        }`}\n      >\n        {link ? linkContent : name}\n      </h3>\n      <p className={classes.description}>{description}</p>\n    </div>\n  );\n};\n\nexport default SummaryItem;\n"],"sourceRoot":""}